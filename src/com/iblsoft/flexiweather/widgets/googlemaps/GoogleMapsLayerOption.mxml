<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 minWidth="250" minHeight="100" width="250" height="100">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<s:VGroup width="100%" height="100%" >
		<s:HGroup width="100%">
			<s:Label text="Label:" width="120"/>
			<s:TextInput id="txtLayerName" width="100%" text="{label}" change="changeLabel()"/>
		</s:HGroup>
		<s:HGroup>
			<s:Label text="Map type:" width="120"/>
			<s:ButtonBar click="switchMapType()" id="mapTypeBar" selectedIndex="{selectMapTypeIndex}">
				<s:dataProvider>
					<s:ArrayCollection>
						<fx:Object label="Normal" type="normal"/>
						<fx:Object label="Physical" type="physical"/>
						<fx:Object label="Satellite" type="satellite"/>
						<fx:Object label="Hybrid" type="hybrid"/>
					</s:ArrayCollection>
				</s:dataProvider>
			</s:ButtonBar>
			<!--s:Button label="Hybrid" click="switchMapType(MapType.HYBRID_MAP_TYPE)"/>
			<s:Button label="Normal" click="switchMapType(MapType.NORMAL_MAP_TYPE)"/>
			<s:Button label="Physical" click="switchMapType(MapType.PHYSICAL_MAP_TYPE)"/>
			<s:Button label="Satellite" click="switchMapType(MapType.SATELLITE_MAP_TYPE)"/-->
		</s:HGroup>
	</s:VGroup>  
	
	<fx:Script>
		<![CDATA[
			import com.google.maps.MapType;
			import com.google.maps.interfaces.IMapType;
			
			[Bindable]
			public var selectMapTypeIndex:int;
			[Bindable]
			public var label: String;
			
			private var _layer: InteractiveLayerGoogleMaps;
			

			public function get layer():InteractiveLayerGoogleMaps
			{
				return _layer;
			}

			public function set layer(value:InteractiveLayerGoogleMaps):void
			{
				_layer = value;
				if (_layer)
				{
					var cfg: GoogleMapLayerConfiguration = value.configuration as GoogleMapLayerConfiguration;
					label = _layer.layerName;
					var type: String = _layer.mapType;//cfg.mapType;
					switch (type)
					{
						default:
						case GoogleMapLayerConfiguration.MAP_TYPE_NORMAL:
							selectMapTypeIndex = 0;
							break;
						case GoogleMapLayerConfiguration.MAP_TYPE_PHYSICAL:
							selectMapTypeIndex = 1;
							break;
						case GoogleMapLayerConfiguration.MAP_TYPE_SATELLITE:
							selectMapTypeIndex = 2;
							break;
						case GoogleMapLayerConfiguration.MAP_TYPE_HYBRID:
							selectMapTypeIndex = 3;
							break;
					}
				}
			}

			private function switchMapType(): void
			{
				
				if (layer)
				{
					var selectedItem: Object = mapTypeBar.selectedItem;
					if (selectedItem)
					{
						switch (selectedItem.type)
						{
							default:
							case GoogleMapLayerConfiguration.MAP_TYPE_NORMAL:
								layer.setMapType(MapType.NORMAL_MAP_TYPE);
								break;
							case GoogleMapLayerConfiguration.MAP_TYPE_PHYSICAL:
								layer.setMapType(MapType.PHYSICAL_MAP_TYPE);
								break;
							case GoogleMapLayerConfiguration.MAP_TYPE_SATELLITE:
								layer.setMapType(MapType.SATELLITE_MAP_TYPE);
								break;
							case GoogleMapLayerConfiguration.MAP_TYPE_HYBRID:
								layer.setMapType(MapType.HYBRID_MAP_TYPE);
								break;
						}
					}
				}
			}
			
			private function changeLabel(): void
			{
				if (layer)
				{
//					layer.configuration.label = txtLayerName.text;
					layer.layerName = txtLayerName.text;
				}
			}
				
		]]>
	</fx:Script>
</s:Group>
