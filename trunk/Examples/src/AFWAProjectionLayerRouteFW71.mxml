<?xml version="1.0" encoding="utf-8"?>
<FlexiWeatherTemplate xmlns:fx="http://ns.adobe.com/mxml/2009"
                      xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
                      xmlns:widgets="com.iblsoft.flexiweather.widgets.*" xmlns="*" minWidth="955"
                      minHeight="600">
    <fx:Declarations>

        <!-- Place non-visual elements (e.g., services, value objects) here -->
        <s:NumberFormatter fractionalDigits="2" useGrouping="false" id="distanceFormatter"/>
    </fx:Declarations>
    <s:VGroup width="100%" height="100%" gap="2" paddingTop="10" paddingBottom="10"
              paddingLeft="10" paddingRight="10">
        <s:HGroup id="hboxMenu" width="100%" verticalAlign="middle">
            <s:Label text="Tools:"/>
            <s:ToggleButton label="Zoom (Ctrl)" selected="{!m_ilz.requireCtrlKey}"
                            click="m_ilp.requireShiftKey = true; m_ilz.requireCtrlKey = !m_ilz.requireCtrlKey;"/>
            <s:ToggleButton label="Zoom 100%" click="m_iw.setViewFullExtent()"/>
            <s:ToggleButton label="Pan (Shift)" selected="{!m_ilp.requireShiftKey}"
                            click="m_ilz.requireCtrlKey = true; m_ilp.requireShiftKey = !m_ilp.requireShiftKey;"/>
            <s:Spacer width="10"/>
            <s:Label text="Projections:"/>
            <s:ToggleButton label="LatLon" selected="{m_iw.crs == 'EPSG:4326'}"
                            click="changeProjection('EPSG:4326');"/>
            <s:ToggleButton label="Mercator" selected="{m_iw.crs == 'ESRI:54004'}"
                            click="changeProjection('ESRI:54004');"/>
            <s:ToggleButton label="North Polar Stereo" selected="{m_iw.crs == 'ESRI:102018'}"
                            click="changeProjection('ESRI:102018');"/>
            <s:ToggleButton label="North Polar Stereo - 95W" selected="{m_iw.crs == 'PROJ4:proj=stere +lat_0=90 +lon_0=-95 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m'}"
                            click="changeProjection('PROJ4:proj=stere +lat_0=90 +lon_0=-95 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m');"/>
            <s:ToggleButton label="South Polar Stereo" selected="{m_iw.crs == 'ESRI:102021'}"
                            click="changeProjection('ESRI:102021');"/>
            <s:ToggleButton label="Google Maps" selected="{m_iw.crs == 'EPSG:900913'}"
                            click="changeProjection('EPSG:900913');"/>

            <s:Button label="Remove Surface Obs" click="removeLayer(event)" />

        </s:HGroup>
        <s:HGroup id="hboxCaption" width="100%" verticalAlign="middle">
            <s:Label
                    text="This example demonstrates displaying InteractiveLayerRoute in InteractiveWidget."
                    fontWeight="bold" fontSize="14"/>
            <s:Label id="labelProgress" textAlign="right" fontWeight="bold"/>
            <s:Button label="Draw mode: Plain"
                      click="changeDrawMode(DrawMode.PLAIN)"/>
            <s:Button label="Draw mode: Great Arc"
                      click="changeDrawMode(DrawMode.GREAT_ARC)"/>
            <s:Button label="Clear route" click="clearRoute()"/>
            <s:Label id="coordLabel"/>
        </s:HGroup>
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Button label="Bratislava"
                      click="drawBratislava()"/>
        </s:HGroup>
        <s:HGroup width="100%" height="100%">
            <widgets:InteractiveWidget id="m_iw" width="100%" height="100%">
                <widgets:InteractiveLayerZoom id="m_ilz" zOrder="1"/>
                <widgets:InteractiveLayerPan id="m_ilp" zOrder="2"/>
				<widgets:InteractiveLayerCoordinate zOrder="3" textLabel="{coordLabel}"/>
                <!-- example with bigger placemarks and thick routes (e.g. for mobile) -->

                <!--widgets:InteractiveLayerRoute width="100%" height="100%" zOrder="3"
                                                                           routeThickness="10" routeBorderThickness="3"
                                                                           routeBorderColor="0xff0000" routeFillColor="0xffcc00"
                                                                           placemarkBorderColor="0xff0000" placemarkFillColor="0xffcc00" placemarkHighlightFillColor="0xffffff"
                                                                           placemarkRadius="20" placemarkBorderThickness="3"/-->
                <widgets:InteractiveLayerRoute id="route" width="100%" height="100%" zOrder="1"
                                               routeThickness="3" routeBorderThickness="1" routeBorderColor="0x004400"
                                               routeFillColor="0x00aa00" placemarkBorderColor="0x004400"
                                               placemarkFillColor="0x00aa00" placemarkHighlightFillColor="0xffffff"
                                               placemarkRadius="7" placemarkBorderThickness="1" drawMode="greatArc"
                                               routeChanged="onRouteChanged()"/>
            </widgets:InteractiveWidget>
            <s:VGroup width="250" height="100%">
                <s:Label text="Distances"/>
                <s:Label text="Total distance: {distanceFormatter.format(totalDistance)}km"/>
                <s:List dataProvider="{distances}" width="100%" height="100%">
                    <s:itemRenderer>
                        <fx:Component>
                            <s:ItemRenderer>
                                <s:Label
                                        text="{data.part}: Distance: {outerDocument.distanceFormatter.format(data.kilometres)}km, {outerDocument.distanceFormatter.format(data.nauticalMiles)} NM"
                                        paddingBottom="3" paddingTop="3" paddingLeft="5"
                                        paddingRight="5"/>
                            </s:ItemRenderer>
                        </fx:Component>
                    </s:itemRenderer>
                </s:List>
            </s:VGroup>
        </s:HGroup>
    </s:VGroup>
    <fx:Script>
                <![CDATA[
					import com.iblsoft.flexiweather.ogc.BBox;
					import com.iblsoft.flexiweather.ogc.InteractiveLayerWMS;
					import com.iblsoft.flexiweather.ogc.Version;
					import com.iblsoft.flexiweather.ogc.configuration.layers.WMSLayerConfiguration;
					import com.iblsoft.flexiweather.ogc.configuration.services.WMSServiceConfiguration;
					import com.iblsoft.flexiweather.ogc.managers.OGCServiceConfigurationManager;
					import com.iblsoft.flexiweather.proj.Coord;
					import com.iblsoft.flexiweather.proj.Projection;
					import com.iblsoft.flexiweather.utils.draw.DrawMode;
					import com.iblsoft.flexiweather.widgets.InteractiveDataLayer;
					import com.iblsoft.flexiweather.widgets.InteractiveLayer;
					import com.iblsoft.flexiweather.widgets.InteractiveLayerRoute;
					
					import mx.collections.ArrayCollection;
					import mx.events.FlexEvent;

        [Bindable]
        public var totalDistance: Number;

        [Bindable]
        public var distances: ArrayCollection = new ArrayCollection();

        private var m_layerSufraceObservations: InteractiveLayerWMS;

		private function drawBratislava(): void
		{
			var c84: Coord = new Coord('CRS:84', 17, 48);
			
			var p: Point = m_iw.coordToPoint(c84);
			
			var gr: Graphics = route.graphics;
			gr.beginFill(0xff0000);
			gr.lineStyle(2, 0xffffff);
			gr.drawCircle(p.x, p.y,5);
			gr.endFill();
			
		}

		private function changeProjection(crs: String): void
		{
			switch (crs)
			{
				case 'ESRI:54004':
					m_iw.setCRS('ESRI:54004', false); 
					m_iw.setExtentBBoxRaw(0,-13000000,36000000,13000000);
					break;
				case 'ESRI:102018':
					m_iw.setCRS('ESRI:102018', false); 
					m_iw.setExtentBBoxRaw(-10000000,-10000000,10000000,10000000);
					break;
				case 'ESRI:102021':
					m_iw.setCRS('ESRI:102021', false); 
					m_iw.setExtentBBoxRaw(-10000000,-10000000,10000000,10000000);
					break;
				case 'PROJ4:proj=stere +lat_0=90 +lon_0=-95 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m':
					m_iw.setCRS('PROJ4:proj=stere +lat_0=90 +lon_0=-95 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m', false); 
					m_iw.setExtentBBoxRaw(-10000000,-10000000,10000000,10000000);
					break;
				case 'EPSG:4326':
					m_iw.setCRSExtentAndViewBBox('EPSG:4326');
					break;
				case 'EPSG:900913':
					m_iw.setCRSExtentAndViewBBox('EPSG:900913');
					break;
			}
		}
        private function changeDrawMode(mode: String): void
        {
            route.changeDrawMode(mode);
        }

        override protected function onCreationComplete(event: FlexEvent): void
        {
            super.onCreationComplete(event);
            m_iw.setCRSExtentAndViewBBox('CRS:84');
            addLayer('dem', 1);
            addLayer('foreground', 1);
            getAllServicesCapabilities();

            var scm: OGCServiceConfigurationManager =
                    OGCServiceConfigurationManager.getInstance();
            var srv: WMSServiceConfiguration = scm.getService(
                    "ria",
                    s_serverURL + "/ria", new Version(1, 3, 0),
                    WMSServiceConfiguration) as WMSServiceConfiguration;
            var srv2: WMSServiceConfiguration = scm.getService(
                    "obs",
                    s_serverURL + "/observations?STATION_MODEL_ZOOM=0.9", new Version(1, 3, 0),
                    WMSServiceConfiguration) as WMSServiceConfiguration;
            srv2.updatePeriod = 5 * 60 * 1000;

            var lc:WMSLayerConfiguration = new WMSLayerConfiguration(srv2, ["surface"]);
            m_layerSufraceObservations = new InteractiveLayerWMS(m_iw, lc);
            m_layerSufraceObservations.name = 'SurfaceObservations';
            m_layerSufraceObservations.zOrder = 0;
            m_iw.interactiveLayerMap.addLayer(m_layerSufraceObservations);

            Projection.addCRSByProj4("ESRI:54004", "+title=World Mercator +proj=merc +lat_ts=0 +lon_0=0 +k=1.000000 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m", new BBox(0,-13000000,36000000,13000000));
            Projection.addCRSByProj4("ESRI:102018", "+title=North Pole Stereographic +proj=stere +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m", new BBox(-10000000,-10000000,10000000,10000000));
            Projection.addCRSByProj4("ESRI:102021", "+title=South Pole Stereographic +proj=stere +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m", new BBox(-10000000,-10000000,10000000,10000000));
            Projection.addCRSByProj4("EPSG:4326", "+title=WGS 84 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs", new BBox(-180, -90, 180, 90), true);
            Projection.addCRSByProj4("PROJ4:proj=stere +lat_0=90 +lon_0=-95 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m", "+proj=stere +lat_0=90 +lon_0=-95 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m", new BBox(-10000000,-10000000,10000000,10000000));
        }

        private function clearRoute(): void
        {
            route.clearRoute();
        }

        private function onRouteChanged(): void
        {
            measureDistances();
        }

        private function measureDistances(): void
        {
            var routeCoords: Array = route.coords;
            var totalCoords: int = routeCoords.length;
            totalDistance = 0;
            distances.removeAll();
            //need to check new segments
            for (var i: int = 1; i < (totalCoords); i++)
            {
                var coord1: Coord = routeCoords.getItemAt(i - 1) as Coord;
                var coord2: Coord = routeCoords.getItemAt(i) as Coord;
                //need to convert coord to LatLon
                coord1 = coord1.toLaLoCoord();
                coord2 = coord2.toLaLoCoord();
                var segment: Object = {part: i, coord1: coord1, coord2: coord2, index: i - 1, distance: 0};
                measureSegment(segment);
                distances.addItem(segment);
            }
        }

        private function measureSegment(segment: Object): void
        {
            var distance: Number = segment.coord1.distanceTo(segment.coord2);
            totalDistance += distance;
            segment.meters = distance * 1000;
            segment.kilometres = distance;
            segment.nauticalMiles = segment.meters * 0.000539956803;
            segment.statuteMiles = segment.meters * 0.000621371192
        }

        private function removeLayer(event:MouseEvent):void
        {
            m_iw.removeLayer(m_layerSufraceObservations);
        }

        ]]>
        </fx:Script>
</FlexiWeatherTemplate>