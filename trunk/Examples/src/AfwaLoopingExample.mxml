<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:widgets="com.iblsoft.flexiweather.widgets.*"
               xmlns="*"
               minWidth="955" minHeight="600" creationComplete="onCreationComplete(event)" >
    
    <widgets:InteractiveWidget id="map" width="100%" height="100%">
        <widgets:InteractiveLayerZoom id="layerZoom" zOrder="1"/>
        <widgets:InteractiveLayerPan id="layerPan" zOrder="2"/>
    </widgets:InteractiveWidget>
    
    <s:HGroup id="hboxCaption" width="100%" verticalAlign="middle">
        
        <s:Label id="labelProgress" textAlign="right" fontWeight="bold"/>
        
        <s:HGroup id="buttons">
            <s:Button id="nextFrame" label="Next Frame" click="onNextClick();" />
        </s:HGroup>
        
    </s:HGroup>
    
    <fx:Script>
        <![CDATA[
			import com.iblsoft.flexiweather.FlexiWeatherConfiguration;
			import com.iblsoft.flexiweather.ogc.BBox;
			import com.iblsoft.flexiweather.ogc.Version;
			import com.iblsoft.flexiweather.ogc.configuration.layers.WMSWithQTTLayerConfiguration;
			import com.iblsoft.flexiweather.ogc.configuration.services.WMSServiceConfiguration;
			import com.iblsoft.flexiweather.ogc.managers.OGCServiceConfigurationManager;
			import com.iblsoft.flexiweather.ogc.tiling.InteractiveLayerWMSWithQTT;
			import com.iblsoft.flexiweather.proj.Projection;
			import com.iblsoft.flexiweather.widgets.BackgroundJobManager;
			import com.iblsoft.flexiweather.widgets.LabelJobProgressIndicator;
			
			import mx.events.FlexEvent;
            
//            private var iblBaseLayer:IblBaseLayer;
            private var temperatureLayer:InteractiveLayerWMSWithQTT;
            
            //-------------------------------------------------------------------------------------
            //  Modify these variables to update to an advertised model run and turn tiling on/off
            //  For temperature layer.
            //-------------------------------------------------------------------------------------
            private var currentModelRun:String = "2013-08-26T00:00:00Z";
            private var tilingOn:Boolean = true;
            //-------------------------------------------------------------------------------------
            //-------------------------------------------------------------------------------------
            
            private var currentForecastIndex:int = -1;
            private var steps:Array = ["PT0S","PT3H","PT6H","PT9H","PT12H","PT15H","PT18H","PT21H"];
            
            private var scm:OGCServiceConfigurationManager;
            private var serviceRIA:WMSServiceConfiguration;
            private var serviceGFS:WMSServiceConfiguration;
            
            private function onCreationComplete(event: FlexEvent):void {
				
				FlexiWeatherConfiguration.FLEXI_WEATHER_LOADS_GET_CAPABILITIES = true;
				
				
                removeEventListener(FlexEvent.CREATION_COMPLETE, onCreationComplete);
                
                initializeProgressBar();
                initializeServiceConfigManager();
                initializeProjections();
                initializeLocation();
				
				if (FlexiWeatherConfiguration.FLEXI_WEATHER_LOADS_GET_CAPABILITIES)
                	scm.update(scm.getAllServicesNames());
				
                initializeLayers();
            }   
            
            private function initializeProgressBar():void {
                if (Capabilities.playerType == "Desktop") {
                    BackgroundJobManager.getInstance().m_progressBar = new LabelJobProgressIndicator(labelProgress);
                } else {
                    BackgroundJobManager.getInstance().createDefaultPreloader();
                    BackgroundJobManager.getInstance().setupIndicator(hboxCaption);
                }
            }
            
            private  function initializeServiceConfigManager():void {
                initalizeIblServices();
            }
            
            private function initalizeIblServices():void {
                var s_serverURL: String = 'http://ogcie.iblsoft.com';
                
                scm= OGCServiceConfigurationManager.getInstance();
                serviceRIA = scm.getService(
                    "ria",
                    s_serverURL + "/ria", new Version(1, 3, 0),
                    WMSServiceConfiguration) as WMSServiceConfiguration;
                serviceGFS = scm.getService(
                    "obs",
                    s_serverURL + "/ncep/gfs", new Version(1, 3, 0),
                    WMSServiceConfiguration) as WMSServiceConfiguration;
            }
            
            private function initializeProjections():void {
                Projection.addCRSByProj4("ESRI:54004", "+title=World Mercator +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs");
                Projection.addCRSByProj4("ESRI:102018", "+title=North Pole Stereographic +proj=stere +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
                Projection.addCRSByProj4("ESRI:102021", "+title=South Pole Stereographic +proj=stere +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
                
                Projection.addCRSByProj4("EPSG:4326",
                    "+title=WGS 84 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs",
                    new BBox(-180, -90, 180, 90), true);
            }
            
            private function initializeLocation():void {
                map.setCRS(Projection.CRS_EPSG_GEOGRAPHIC, false);
                map.setExtentBBoxRaw(-180, -90, 180, 90, false);
                map.setViewBBoxRaw(-18, 31, 59, 66, true);
            }
            
            private function initializeLayers():void {
                initializeBaseLayer();
                initializeTemperatureLayer();
            }
            
            private function initializeBaseLayer():void {
                var serviceConfig:WMSServiceConfiguration;
                var layerConfig:WMSWithQTTLayerConfiguration;
                serviceConfig = serviceRIA;
                layerConfig = new WMSWithQTTLayerConfiguration(serviceConfig, ["background-dem"], 256);
                layerConfig.avoidTiling = true;
                layerConfig.label = "Background";
                var baseLayer:InteractiveLayerWMSWithQTT = new InteractiveLayerWMSWithQTT(map, layerConfig);
                
                map.addLayer(baseLayer);
            }
            
            private function initializeTemperatureLayer():void {
                var serviceConfig:WMSServiceConfiguration;
                var layerConfig:WMSWithQTTLayerConfiguration;
                serviceConfig = serviceGFS;
                layerConfig = new WMSWithQTTLayerConfiguration(serviceConfig, ["temperature"], 256);
                layerConfig.avoidTiling = !tilingOn;
                layerConfig.label = "Temperature";
                temperatureLayer = new InteractiveLayerWMSWithQTT(map, layerConfig);
                temperatureLayer.alpha = .5;
                temperatureLayer.setWMSDimensionValue("RUN", currentModelRun);
                
                updateForecastStep();                

                map.addLayer(temperatureLayer);
            }
            
            private function updateForecastStep():void {
                if (currentForecastIndex < steps.length - 1) {
                    currentForecastIndex++;
                } else {
                    currentForecastIndex = 0;
                }
                
                temperatureLayer.setWMSDimensionValue("FORECAST", steps[currentForecastIndex]);
                temperatureLayer.refresh(false);
            }
            
            private function onNextClick():void {
                updateForecastStep();
            }
                
        ]]>
    </fx:Script>
</s:Application>
