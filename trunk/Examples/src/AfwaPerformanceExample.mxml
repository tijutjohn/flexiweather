<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:widgets="com.iblsoft.flexiweather.widgets.*"
               xmlns="*"
               minWidth="955" minHeight="600" creationComplete="onCreationComplete(event)" >

    <widgets:InteractiveWidget id="map" width="100%" height="100%">
        <widgets:InteractiveLayerZoom id="layerZoom" zOrder="1"/>
        <widgets:InteractiveLayerPan id="layerPan" zOrder="2"/>
    </widgets:InteractiveWidget>

    <s:HGroup id="hboxCaption" width="100%" verticalAlign="middle">

        <s:Label id="labelProgress" textAlign="right" fontWeight="bold"/>

    </s:HGroup>

    <fx:Script>
        <![CDATA[
        import com.iblsoft.flexiweather.FlexiWeatherConfiguration;
        import com.iblsoft.flexiweather.ogc.BBox;
        import com.iblsoft.flexiweather.ogc.InteractiveLayerQTTMS;
        import com.iblsoft.flexiweather.ogc.Version;
        import com.iblsoft.flexiweather.ogc.configuration.layers.QTTMSLayerConfiguration;
        import com.iblsoft.flexiweather.ogc.configuration.layers.WMSWithQTTLayerConfiguration;
        import com.iblsoft.flexiweather.ogc.configuration.services.WMSServiceConfiguration;
        import com.iblsoft.flexiweather.ogc.managers.OGCServiceConfigurationManager;
        import com.iblsoft.flexiweather.proj.Projection;
        import com.iblsoft.flexiweather.widgets.BackgroundJobManager;
        import com.iblsoft.flexiweather.widgets.LabelJobProgressIndicator;

        import mx.events.FlexEvent;

        import tiled.ConfigurableTiledLayer;

        private var scm:OGCServiceConfigurationManager;
        private var capabilitiesServiceConfig:WMSServiceConfiguration;
        private var serviceGFS:WMSServiceConfiguration;

        private function onCreationComplete(event: FlexEvent):void {

            FlexiWeatherConfiguration.FLEXI_WEATHER_LOADS_GET_CAPABILITIES = true;

            removeEventListener(FlexEvent.CREATION_COMPLETE, onCreationComplete);

            initializeProgressBar();
            initializeServiceConfigManager();
            initializeProjections();
            initializeLocation();

            if (FlexiWeatherConfiguration.FLEXI_WEATHER_LOADS_GET_CAPABILITIES)
                scm.update(scm.getAllServicesNames());

            initializeLayers();
        }

        private function initializeProgressBar():void {
            if (Capabilities.playerType == "Desktop") {
                BackgroundJobManager.getInstance().m_progressBar = new LabelJobProgressIndicator(labelProgress);
            } else {
                BackgroundJobManager.getInstance().createDefaultPreloader();
                BackgroundJobManager.getInstance().setupIndicator(hboxCaption);
            }
        }

        private  function initializeServiceConfigManager():void {
            initalizeIblServices();
        }

        private function initalizeIblServices():void {
            scm= OGCServiceConfigurationManager.getInstance();
            capabilitiesServiceConfig = scm.getService(
                    "afwa",
                    "https://weather.af.mil/services/WMS?TILESIZE=1024", new Version(1, 3, 0),
                    WMSServiceConfiguration) as WMSServiceConfiguration;
        }

        private function initializeProjections():void {
            Projection.addCRSByProj4("EPSG:4326",
                    "+title=WGS 84 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs",
                    new BBox(-180, -90, 180, 90), true);
        }

        private function initializeLocation():void {
            map.setCRS(Projection.CRS_EPSG_GEOGRAPHIC, false);
            map.setExtentBBoxRaw(-180, -90, 180, 90, false);
            map.setViewBBoxRaw(-18, 31, 59, 66, true);
        }

        private function initializeLayers():void {
            initializeGoogleLayers();
            initializeWmsLayers();
        }

        private function initializeGoogleLayers():void {
            var urlPattern:String = "https://weather.af.mil/afw_lores/query?request=ImageryMaps&channel=1000&version=4&row=%ROW%&col=%COL%&level=%ZOOM%";
            var qttConfig: QTTMSLayerConfiguration = new QTTMSLayerConfiguration();
            qttConfig.label = 'googleImagery';

            var googleImagery:InteractiveLayerQTTMS = qttConfig.createInteractiveLayer(map) as InteractiveLayerQTTMS;
            googleImagery.addCRSWithTilingExtent(urlPattern, Projection.CRS_EPSG_GEOGRAPHIC, new BBox(-180, -180, 180, 180), 256, 1, 18);
            map.addLayer(googleImagery);

            var layerConfig:WMSWithQTTLayerConfiguration;
            layerConfig = new WMSWithQTTLayerConfiguration(capabilitiesServiceConfig, ["GFS_Temperature_in_F"], 1024);
            layerConfig.minimumZoomLevel = 3;
            layerConfig.maximumZoomLevel = 18;
            layerConfig.label = "GFS_Temperature_in_F";
            layerConfig.avoidTiling = false;
            var gfsTemp:ConfigurableTiledLayer = new ConfigurableTiledLayer(map, layerConfig);
            gfsTemp.setWMSDimensionValue("TILESIZE", "1024");
            gfsTemp.setWMSStyleName(0, "Temperatures_in_F");
            gfsTemp.alpha = .5;

            map.addLayer(gfsTemp);

            layerConfig = new WMSWithQTTLayerConfiguration(capabilitiesServiceConfig, ["GFS_500MB"], 1024);
            layerConfig.minimumZoomLevel = 3;
            layerConfig.maximumZoomLevel = 18;
            layerConfig.label = "GFS_500MB";
            layerConfig.avoidTiling = false;
            var gfs500:ConfigurableTiledLayer = new ConfigurableTiledLayer(map, layerConfig);
            gfs500.setWMSDimensionValue("TILESIZE", "1024");

            map.addLayer(gfs500);

            urlPattern = "https://weather.af.mil/afw_lores/query?request=VectorMapsRaster&channel=1029&version=98&row=%ROW%&col=%COL%&level=%ZOOM%";
            qttConfig = new QTTMSLayerConfiguration();
            qttConfig.label = 'googleBorders';

            var googleBorders:InteractiveLayerQTTMS = qttConfig.createInteractiveLayer(map) as InteractiveLayerQTTMS;
            googleBorders.addCRSWithTilingExtent(urlPattern, Projection.CRS_EPSG_GEOGRAPHIC, new BBox(-180, -180, 180, 180), 256, 1, 18);
            map.addLayer(googleBorders);

            urlPattern = "https://weather.af.mil/afw_lores/query?request=VectorMapsRaster&channel=1032&version=111&row=%ROW%&col=%COL%&level=%ZOOM%";
            qttConfig = new QTTMSLayerConfiguration();
            qttConfig.label = 'googlePopulatedPlaces';

            var googlePopulatedPlaces:InteractiveLayerQTTMS = qttConfig.createInteractiveLayer(map) as InteractiveLayerQTTMS;
            googlePopulatedPlaces.addCRSWithTilingExtent(urlPattern, Projection.CRS_EPSG_GEOGRAPHIC, new BBox(-180, -180, 180, 180), 256, 1, 18);
            map.addLayer(googlePopulatedPlaces);
        }

        private function initializeWmsLayers():void {

        }

        ]]>
    </fx:Script>
</s:Application>
