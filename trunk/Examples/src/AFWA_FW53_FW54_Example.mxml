<?xml version="1.0" encoding="utf-8"?>
<FlexiWeatherTemplate xmlns:fx="http://ns.adobe.com/mxml/2009"
                      xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
                      minWidth="955" minHeight="600" xmlns:widgets="com.iblsoft.flexiweather.widgets.*"
                      xmlns="*">
    <fx:Declarations>
        
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>
    <s:VGroup width="100%" height="100%" gap="2" paddingTop="10" paddingBottom="10"
              paddingLeft="10" paddingRight="10">
        <s:HGroup id="hboxCaption" width="100%" verticalAlign="middle">
            <s:Label text="This example demonstrates use of InteractiveLayerTiled."
                     fontWeight="bold" fontSize="14"/>
            <s:Label id="labelProgress" textAlign="right" fontWeight="bold"/>
        </s:HGroup>
        <s:HGroup width="100%" height="100%">
            <widgets:InteractiveWidget id="m_iw" width="100%" height="100%" zoomLevelChanged="onZoomChange(event);">
                <widgets:InteractiveLayerZoom id="m_ilz" zOrder="1"/>
                <widgets:InteractiveLayerPan id="m_ilp" zOrder="2"/>
                <widgets:InteractiveLayerMap id="ilm" width="100%" height="100%"/>
            </widgets:InteractiveWidget>
        </s:HGroup>
    </s:VGroup>
    <fx:Script>
        <![CDATA[
			import com.iblsoft.flexiweather.FlexiWeatherConfiguration;
			import com.iblsoft.flexiweather.events.InteractiveLayerQTTEvent;
			import com.iblsoft.flexiweather.ogc.BBox;
			import com.iblsoft.flexiweather.ogc.InteractiveLayerQTTMS;
			import com.iblsoft.flexiweather.ogc.configuration.layers.QTTMSLayerConfiguration;
			import com.iblsoft.flexiweather.ogc.configuration.layers.TiledLayerConfiguration;
			import com.iblsoft.flexiweather.ogc.tiling.InteractiveLayerTiled;
			import com.iblsoft.flexiweather.ogc.tiling.TileMatrix;
			import com.iblsoft.flexiweather.ogc.tiling.TileMatrixLimits;
			import com.iblsoft.flexiweather.ogc.tiling.TileMatrixSet;
			import com.iblsoft.flexiweather.ogc.tiling.TileMatrixSetLimits;
			import com.iblsoft.flexiweather.ogc.tiling.TileMatrixSetLink;
			import com.iblsoft.flexiweather.proj.Projection;
			
			import mx.containers.Tile;
			import mx.events.FlexEvent;
			
			import tiled.LargeTiledLayer;
            private var _tms900913: TileMatrixSet;
            private var _tiledLayer: InteractiveLayerTiled;
            private var _qttLayer: InteractiveLayerQTTMS;
            
            override protected function onCreationComplete(event: FlexEvent): void
            {
				// this will prevent FlexiWeather from loading GetCapabilities request and its up to developer to correct set parsed data to all layers
				FlexiWeatherConfiguration.FLEXI_WEATHER_LOADS_GET_CAPABILITIES = false;
				
                super.onCreationComplete(event);
                
                Projection.addCRSByProj4("ESRI:54004", "+title=World Mercator +proj=merc +lat_ts=0 +lon_0=0 +k=1.000000 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
                Projection.addCRSByProj4("ESRI:102018", "+title=North Pole Stereographic +proj=stere +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
                Projection.addCRSByProj4("ESRI:102021", "+title=South Pole Stereographic +proj=stere +lat_0=-90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m");
				
				if (FlexiWeatherConfiguration.FLEXI_WEATHER_LOADS_GET_CAPABILITIES)
                	scm.update(scm.getAllServicesNames());
                
                m_iw.setCRSExtentAndViewBBox('EPSG:900913');
                
//                createInteractiveLayerQTTMS();
                createLargeTileLayer();
            }
			
			private function createLargeTileLayer(): void
			{
				var config: TiledLayerConfiguration = new TiledLayerConfiguration();
				
				var largeLayer: LargeTiledLayer = new LargeTiledLayer();
				m_iw.interactiveLayerMap.addLayer(largeLayer);
				largeLayer.refresh(true);
			}
			
            
            private function createInteractiveLayerQTTMS(): void
            {
                var qttConfig: QTTMSLayerConfiguration = new QTTMSLayerConfiguration();
                qttConfig.label = 'openstreetmap';
                
                _qttLayer = qttConfig.createInteractiveLayer(m_iw) as InteractiveLayerQTTMS;
                _qttLayer.addCRSWithTilingExtent('http://b.tile.openstreetmap.org/%ZOOM%/%COL%/%ROW%.png', 'EPSG:900913', new BBox(-20037508.34, -20037508.34, 20037508.34, 20037508.34), 256, 0, 18);
                
                m_iw.interactiveLayerMap.addLayer(_qttLayer);
                _qttLayer.refresh(true);
            }
            
            /**
            * FW-54 - This simulates on a zoom level change, switching to a more detailed set of data for our base layers.
            *         The exception gets thrown in InteractiveLayerTiled/onAreaChanged from a null m_cached even though 
            *         layer initialized is true
            */
            private function onZoomChange(event:InteractiveLayerQTTEvent):void {
//                m_iw.removeLayer(_qttLayer);
//                m_iw.addLayer(_qttLayer);
				
				m_iw.interactiveLayerMap.removeLayer(_qttLayer);
				m_iw.interactiveLayerMap.addLayer(_qttLayer);
            }
            
            /**
            * FW-53 - Run this example, you will start world wide view with all continents in view.  Pan west OVER the international dateline.
            *         When international dateline is passed, hold ctrl to bounding box zoom a section containing parts of europ, africa, and asia.
            *         An exception gets thrown for a null property in BBox/coverageRatio.
            * 
            */
            
        ]]>
    </fx:Script>
</FlexiWeatherTemplate>
